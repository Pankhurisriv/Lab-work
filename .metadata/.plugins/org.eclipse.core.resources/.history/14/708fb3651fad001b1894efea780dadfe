package com.example.demo.service.test;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Optional;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.context.SpringBootTest;
import com.example.demo.dao.IUserRepository;
import com.example.demo.entity.Role;
import com.example.demo.entity.User;
import com.example.demo.exception.UserNotFoundException;
import com.example.demo.model.UserModel;
import com.example.demo.service.UserServiceImpl;



@ExtendWith(MockitoExtension.class)
@SpringBootTest
public class UserServiceTest {
	@Mock
	private IUserRepository userDAO;

	@InjectMocks /*
					 * injecting package repository marked as @Mock into package service
					 * implementation
					 */
	private UserServiceImpl userImpl;
	
	@Test
	@DisplayName("UserServiceImpl::validate should validate list of existing packages as userModel List")
	void testViewUser() throws UserNotFoundException {
		User testdata = new User(1L, "12345", Role.Admin);
		UserModel expected = new UserModel(1L, "12345", "Admin");
		
		
		Mockito.when(userDAO.findById(1L)).thenReturn(Optional.of(testdata));
		UserModel actual = userImpl.viewUser(1L);
		assertEquals(expected, actual);
	}
	
	

	
	}

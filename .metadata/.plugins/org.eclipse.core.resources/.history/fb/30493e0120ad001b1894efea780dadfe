package com.cg.ova.service.test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Optional;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.context.SpringBootTest;
import com.example.demo.dao.IFeedbackRepository;
import com.example.demo.entity.CartDTO;
import com.example.demo.entity.Customer;
import com.example.demo.entity.Feedback;
import com.example.demo.entity.Order;
import com.example.demo.entity.OrderStatus;
import com.example.demo.entity.VegetableDTO;
import com.example.demo.exception.FeedbackIdNotFoundException;
import com.example.demo.model.AddressModel;
import com.example.demo.model.CartDTOModel;
import com.example.demo.model.CustomerModel;
import com.example.demo.model.FeedbackModel;
import com.example.demo.model.OrderModel;
import com.example.demo.model.VegetableDTOModel;
import com.example.demo.service.FeedbackServiceImpl;

@ExtendWith(MockitoExtension.class)
@SpringBootTest
public class FeedbackServiceImplTest {

	@Mock
	private IFeedbackRepository feedbackDAO;

	@InjectMocks /*
					 * injecting package repository marked as @Mock into package service
					 * implementation
					 */
private FeedbackServiceImpl feedbackImpl;
	
	BigInteger bi= new BigInteger("100");
	BigDecimal bd= new BigDecimal("100.00");
	
Customer customer1=new Customer(12L,"Rahul", "8447630809", "Rahul@gmail.com","abc13",new AddressModel("B-120","Abc","sector21","Noida","UP","20316"));
CustomerModel customer2=new CustomerModel(12L,"Rahul", "8447630809", "Rahul@gmail.com","abc13",new AddressModel("B-120","Abc","sector21","Noida","UP","20316"));

CartDTO cart1=new CartDTO(1L, customer1);
CartDTOModel cart2=new CartDTOModel(1L, customer2);

Order order1=new Order(1L,customer1,bd,LocalDateTime.of(LocalDate.of(2021, 04, 23), LocalTime.of(16,45)),OrderStatus.Delivered);
OrderModel order2=new OrderModel(1L,customer2,bd,LocalDateTime.of(LocalDate.of(2021, 04, 23), LocalTime.of(16,45)),OrderStatus.Delivered);

VegetableDTO veg1=new VegetableDTO(1L,"Orange","Fruit",bi,20,cart1,order1);
VegetableDTOModel veg2=new VegetableDTOModel(1L,"Orange","Fruit",bi,20,cart2,order2);	




    @Test
	@DisplayName("FeedbackServiceImpl::addshould add list of existing packages as FeedbackModel List")
	void testAddFeedback() throws FeedbackIdNotFoundException{
		Feedback testdata = new Feedback(1L,customer1,veg1,8L,"FRESH");
		FeedbackModel expected = new FeedbackModel(1L,customer2,veg2,8L,"FRESH");


		Mockito.when(feedbackDAO.save(testdata)).thenReturn(testdata);
		FeedbackModel actual = feedbackImpl.addFeedback(expected);
		assertEquals(expected, actual);
	}

    @Test
	@DisplayName("FeedbackServiceImpl::viewshould return list of existing packages as FeedbackModel List")
    void  testViewFeedback() throws FeedbackIdNotFoundException{
		
		Feedback testdata = new Feedback(1L,customer1,veg1,8L,"FRESH");
		FeedbackModel expected = new FeedbackModel(1L,customer2,veg2,8L,"FRESH");
	
		
				Mockito.when(feedbackDAO.findById(1L)).thenReturn(Optional.of(testdata));
		FeedbackModel actual = feedbackImpl.viewFeedback(1L);
		assertEquals(expected, actual);
		
		
		
	}
	
}